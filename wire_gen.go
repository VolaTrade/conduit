// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/volatrade/candles/internal/cache"
	"github.com/volatrade/candles/internal/client"
	"github.com/volatrade/candles/internal/config"
	"github.com/volatrade/candles/internal/connections"
	"github.com/volatrade/candles/internal/driver"
	"github.com/volatrade/candles/internal/service"
	"github.com/volatrade/candles/internal/stats"
)

// Injectors from wire.go:

func InitializeAndRun(cfg config.FilePath) (*driver.CandlesDriver, error) {
	configConfig := config.NewConfig(cfg)
	postgresConfig := config.NewDBConfig(configConfig)
	statsConfig := config.NewStatsConfig(configConfig)
	statsD, err := stats.New(statsConfig)
	if err != nil {
		return nil, err
	}
	connectionArray := connections.New(postgresConfig, statsD)
	tickersCache := cache.New()
	apiClient := client.New(statsD)
	tickersService := service.New(connectionArray, tickersCache, apiClient, statsD)
	candlesDriver := driver.New(tickersService)
	return candlesDriver, nil
}

// wire.go:

var cacheModule = wire.NewSet(cache.Module, wire.Bind(new(cache.Cache), new(*cache.TickersCache)))

var serviceModule = wire.NewSet(service.Module, wire.Bind(new(service.Service), new(*service.TickersService)))

var connectionModule = wire.NewSet(connections.Module, wire.Bind(new(connections.Connections), new(*connections.ConnectionArray)))

var apiClientModule = wire.NewSet(client.Module, wire.Bind(new(client.Client), new(*client.ApiClient)))
