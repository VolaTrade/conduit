// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/volatrade/candles/internal/cache"
	"github.com/volatrade/candles/internal/config"
	"github.com/volatrade/candles/internal/driver"
	"github.com/volatrade/candles/internal/dynamo"
	"github.com/volatrade/candles/internal/service"
)

// Injectors from wire.go:

func InitializeAndRun(cfg config.FilePath) (*driver.CandlesDriver, error) {
	configConfig := config.NewConfig(cfg)
	dynamoConfig := config.NewDBConfig(configConfig)
	candlesDynamo, err := dynamo.New(dynamoConfig)
	if err != nil {
		return nil, err
	}
	candlesCache := cache.New()
	candlesService, err := service.New(candlesDynamo, candlesCache)
	if err != nil {
		return nil, err
	}
	candlesDriver := driver.New(candlesService)
	return candlesDriver, nil
}

// wire.go:

var cacheModule = wire.NewSet(cache.Module, wire.Bind(new(cache.Cache), new(*cache.CandlesCache)))

var serviceModule = wire.NewSet(service.Module, wire.Bind(new(service.Service), new(*service.CandlesService)))

var storageModule = wire.NewSet(dynamo.Module, wire.Bind(new(dynamo.Dynamo), new(*dynamo.CandlesDynamo)))
