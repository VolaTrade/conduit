version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1

alias:
  - &workdir /home/circleci/build

  - &container_config
    docker:
      - image: circleci/golang:1.13
    working_directory: *workdir

  - &setup_remote_docker setup_remote_docker

  - &checkout checkout

  - &install_aws_cli aws-cli/install

  - &configure_aws_cli
    aws-cli/setup:
      aws-region: 'AWS_REGION'
      aws-access-key-id: 'AWS_ACCESS_KEY_ID'
      aws-secret-access-key: 'AWS_SECRET_ACCESS_KEY'
  
  - &create_env
    run:
      name: Create config.env
      command: chmod +x create_env.sh && sh create_env.sh

  - &build_and_test_container
    run:
      name: Building and testing docker container
      command: make docker-build

  - &ecr_login
    run:
      name: Logging into ecr
      command: make ecr-login

  - &tag_image
      run:
        name: Tagging image
        command: docker tag tickers:latest ${ECR_URI}/tickers:${CIRCLE_TAG}

  - &ecr_push_image
    run:
        name: Pushing image to ECR
        command: make ecr-push-image

  - &save_image
    run:
        name: Saving docker image for deploy
        command: docker save -o tickers.tar tickers:latest
  - &save_to_workspace
    persist_to_workspace:
      root: *workdir
      paths:
        - tickers.tar
        - config.env
  
  - &mount_workspace
    attach_workspace:
      at: *workdir

  - &load_saved_image
    run:
      name: Loading saved docker image
      command: docker load -i tickers.tar

  - &send_update_signal
    run:
      name: "Sending message to update image"
      command: ssh ${USER}@${EC2_IP} echo ${CIRCLE_TAG} >> version
  

  - &buildtest_only_filters
    filters:
      tags:
        only: /.*/
  
  - &deploy_production_filters
    filters:
      tags:
        only: /v.*/
      branches:
        ignore: /.*/

jobs:
  build:
    <<: *container_config
    steps:
        - *setup_remote_docker
        - *configure_aws_cli
        - *checkout
        - *create_env
        - *build_and_test_container
        - *save_image
        - *save_to_workspace
  deploy:
    <<: *container_config
    steps:
        - *mount_workspace
        - *load_saved_image
        - *install_aws_cli
        - *configure_aws_cli
        - *tag_image
        - *ecr_login
        - *ecr_push_image
        - *send_update_signal

workflows:
  version: 2

  build-test-image:
    jobs:
      - build:
          <<: *buildtest_only_filters
          context: aws-production

  deploy-production:
    jobs:
      - build:
          <<: *deploy_production_filters
          context: aws-production
      - deploy:
          <<: *deploy_production_filters
          context: aws-production
          requires:
            - build
